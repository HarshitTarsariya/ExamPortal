

@model DescriptiveAnswerSheetDTO
@{
    ViewData["Title"] = "EnterMarks";
    var pdfURL = $@"{Model.AnswerLink}#toolbar=0&navpanes=0&scrollbar=0";
}
@await Component.InvokeAsync("CurrPath", new
{
    header = "Enter Marks",
    paths = new List<EPath>() { EPath.DashBoard, EPath.PaperList, EPath.DescriptivePaperResponses, EPath.EnterMarks }
})

<h5>Paper Title : <small>@Model.Paper.PaperTitle</small></h5>
<h5>Paper Code  : <small>@Model.Paper.PaperCode</small></h5>
<h5>Total Marks : <small>@Model.Paper.TotalMarks</small></h5>
<hr />
<h5>Student Name  : <small>@Model.StudentEmailId</small></h5>
<h5>Submitted Time : <small>@Model.SubmittedTime</small></h5>
<hr />
<form asp-action="@nameof(TeacherController.PostEnterMarks)" method="post">
    <div class="form-group">
        <label>Marks Obtained</label>
        <input class="form-control co-md-5 col-sm-8" asp-for="MarksObtained" placeholder="Enter Marks Obtained by student here" name="marksgiven" min="0" max="@Model.Paper.TotalMarks" />
        <span class="text-danger" asp-validation-for="MarksObtained"></span>
        <input type="hidden" name="papercode" asp-for="Paper.PaperCode" />
        <input type="hidden" name="studentname" asp-for="StudentEmailId" />
    </div>

    <button type="submit" class="btn btn-success">Set Marks</button>
</form>
<br />
<br />
<object id="pdfFrame" width="100%" height="700px"></object>
<div class="my-3">
    <a asp-action="@nameof(TeacherController.Responses)" asp-controller="teacher" asp-route-papercode="@Model.Paper.PaperCode">Back To List</a>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            var pdfUrl = "@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(pdfURL))";
            $("#pdfFrame").attr("data", pdfUrl);
        });
    </script>
}




