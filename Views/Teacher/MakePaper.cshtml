@model MCQPaperDTO
@{ ViewData["Title"] = "MakePaper"; }
@section Styles{
    @{ await Html.RenderPartialAsync("_PartialDateTimeCss");}
    <style>
        .Question {
            position: relative;
        }
    </style>
}
@await Component.InvokeAsync("CurrPath", new
{
    header = "Make Paper",
    paths = new List<EPath>() { EPath.DashBoard, EPath.MakeMCQPaper }
})

<form asp-action="@nameof(TeacherController.MakePaper)" id="MakePaper">
    <div class="form-row">
        <div class="col-md-8 my-1">
            <div class="form-group">
                <label>Paper Title</label>
                <input type="text" class="form-control" asp-for="PaperTitle" placeholder="Enter Paper Title Here!" />
                <span class="text-danger" asp-validation-for="PaperTitle"></span>
            </div>
        </div>
        <div class='col my-1'>
            <div class="form-group">
                <label>Expire Date(MM/dd/YYYY)</label>
                <div class="input-group date" id="expireDate" data-target-input="nearest">
                    <input type="text" placeholder="select expire date" asp-for="DeadLine" id="DeadLine" class="form-control datetimepicker-input" data-target="#expireDate" />
                    <div class="input-group-append" data-target="#expireDate" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
                <span class="text-danger" asp-validation-for="DeadLine"></span>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <div class="custom-file">
                <input type="file" class="custom-file-input" id="csvfile" accept=".csv" />
                <label class="custom-file-label" id="fileUploadLbl" title="Eg: Who is John ?,1,0,Mayor,Hero,Musician" for="fileUpload">csv file with format (QuestionText,marks,trueanswer,op1,op2,...) </label>
            </div>
        </div>
    </div>
    <hr />
    <button type="button" id="AddQuestion" class="btn btn-info">
        <i class="fas fa-1x fa-plus"></i>&nbsp;Add Question
    </button>


    <div class="my-5 questionContainer" id="SortableContainer">
        <!--Question goes here-->
    </div>
    <button type="submit" class="btn btn-success"><i class="fas fa-paper-plane"></i>&nbsp; Submit</button>
</form>
<div class="my-3">
    <a asp-action="@nameof(TeacherController.Index)">Back To List</a>
</div>
@section Scripts{
    @{ await Html.RenderPartialAsync("_PartialDateTimeJs");}

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            $.fn.datetimepicker.Constructor.Default = $.extend({}, $.fn.datetimepicker.Constructor.Default, {
                icons: {
                    time: 'far fa-clock',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-calendar-check-o',
                    clear: 'fa fa-trash',
                    close: 'fa fa-times'
                }
            });
            $('#expireDate').datetimepicker({
                minDate: moment().add('days', 1),
                maxDate: moment().add('days', 30),
            });

            /**
             * Template for new Question
             */
            var question = `<div class="card my-1 Question" data-queNo="0">
<div class="card-header">
<div class="input-group">
<div class="input-group-prepend">
<span class="input-group-text addOpt input-group-addon primary" style="cursor:pointer;"><i class="fas fa-1x fa-plus"></i>&nbsp Add Options</span>
</div>
<input type="text" class="form-control" placeholder="write Question here!" required>
<div class="input-group-append">
<span class="input-group-text removeQue input-group-addon danger" style="cursor:pointer;"><i class="fas fa-1x fa-times"></i></span>
</div>
</div>
<input type="number" min="1" class="form-control mt-1" placeholder="enter marks for this Question"required>
</div>
<div class="card-body optionContainer">
<!--Options goes here-->
</div>
</div>`;
            /**
             *  Template for new Option of Question
             */
            var option = `
<div class="input-group my-1 Option">
<div class="input-group-prepend">
<div class="input-group-text">
<input type="radio" required>
</div>
</div>
<input type="text" class="form-control" required>
<div class="input-group-append">
<span class="input-group-text removeOpt input-group-addon danger" style="cursor:pointer;"><i class="fas fa-1x fa-times"></i></span>
</div>
</div>
`;
            /**
             * Our Custom Css classes / ids
             *
             * #AddQuestion : on click add new Question
             * attr(data-queNo) : Question no. of perticular question
             * .questionContainer : container for Question
             *      .Question : class associated with each Question
             *          span.removeQue : on click remove this Question
             *          .optionContainer : container for Options
             *              .Option : class associated with each Option
             *                  span.removeOpt : on click remove this Option
             *                  span.addOpt : on click add new option
             */
            /**
             * Add new Question when user click on "+ Add Question" button
             */
            $("#AddQuestion").click(function () {
                var newQue = $(question);
                var queNo = $(".Question").length;
                newQue.attr("data-queNo", queNo);
                $(".questionContainer").eq(0).append(newQue);
            });
            /**
             * Remove Question when User click on "x" of Question
             */
            $(".questionContainer").on("click", "span.removeQue", function () {
                var myContainer = $(".questionContainer").eq(0);
                $(this).parent().closest(".Question").remove();
                var queNo = 0;
                myContainer.find(".Question").each(function () {
                    $(this).attr("data-queNo", queNo);
                    $(this).find(".Option input[type='radio']").each(function () {
                        $(this).attr("name", `Questions[${queNo}].TrueAnswer`);
                    });
                    queNo++;
                });
            });
            /**
             * Remove Option when user click on "x" of perticular option
             * here we are changing placeholder value of other options
             */
            $(".questionContainer").on("click", "span.removeOpt", function () {
                var optContainer = $(this).parent().closest(".optionContainer");
                $(this).parent().closest(".Option").remove();
                var i = 1;
                optContainer.find("input[type='text']").each(function () {
                    $(this).attr("placeholder", "Option " + i++);
                });
                i = 0;
                optContainer.find("input[type='radio']").each(function () {
                    $(this).attr("value", i++);
                });
            });
            /**
             * Add new Option to perticular Question when user click on "+ Add Options"
             * assign placeholder value = totaloption + 1
             */
            $(".questionContainer").on("click", "span.addOpt", function () {

                var myQuestion = $(this).parent().closest(".Question");
                var queNo = parseInt(myQuestion.attr("data-queNo"));
                var optContainer = myQuestion.find(".optionContainer");
                var newOpt = $(option);

                newOpt.find("input[type='text']")
                    .attr({ placeholder: `Option ${optContainer.children().length + 1}` });
                newOpt.find("input[type='radio']")
                    .attr({ value: optContainer.children().length, name: `Questions[${queNo}].TrueAnswer` })
                optContainer.append(newOpt);
            });
            /**
             * when user submit form assign name to each input field
             * so that at server side we can map it with DTOs
             */
            $("#MakePaper").submit(function () {
                let expdate = $("#DeadLine").val();
                let expd = moment(expdate, "dd-MM-yyyy hh:mm A");
                $("#DeadLine").val(expd["_i"]);
                //alert(`${expdate} | ${expd} | ${finaldate}`);
                var i = 0;
                $(".questionContainer").find(".Question").each(function () {
                    //Question input Field
                    $(this).find(".card-header input[type='text']").attr("name", `Questions[${i}].QuestionText`);
                    var j = 0;
                    //Option input Field
                    $(this).find(".optionContainer input[type='text']").each(function () {
                        $(this).attr("name", `Questions[${i}].Opetions[${j}]`);
                        j++;
                    });
                    //marks input field
                    $(this).find(".card-header input[type='number']").attr("name", `Questions[${i}].Marks`);
                    i++;
                });
            });

            $("#csvfile").change(function (event) {
                var fname = $(this).val();
                if (fname.substr(fname.lastIndexOf('.') + 1) != "csv")
                    return;
                var file = event.target.files[0];
                let fr = new FileReader();
                fr.readAsText(file);
                fr.onload = function (evnt) {
                    var data = evnt.target.result;
                    data = data.split('\n');
                    console.log(data[0])
                    for (var i = 0; i < data.length; i++) {
                        data[i] = data[i].split(',');
                        console.log(data[i][0]);
                        var k = 0, option = "";
                        var queNo = $(".Question").length;
                        for (var j = 3; j < data[i].length; j++) {
                            var optionfirst = `
<div class="input-group my-1 Option">
<div class="input-group-prepend">
<div class="input-group-text">`;
                            if (k == data[i][2])
                                optionfirst += `<input type="radio" value="${k}" name="Questions[${i}].TrueAnswer" checked required>`;
                            else
                                optionfirst += `<input type="radio" value="${k}" name="Questions[${i}].TrueAnswer" required>`;
                            var optionsecond = `

</div>
</div>
<input type="text" class="form-control" value="${data[i][j]}" required>
<div class="input-group-append">
<span class="input-group-text removeOpt input-group-addon danger" style="cursor:pointer;"><i class="fas fa-1x fa-times"></i></span>
</div>
</div>
`;
                            option += optionfirst + optionsecond;
                            k++;
                        }
                        var ques = `<div class="card my-1 Question" data-queNo="${queNo}">
<div class="card-header">
<div class="input-group">
<div class="input-group-prepend">
<span class="input-group-text addOpt input-group-addon primary" style="cursor:pointer;"><i class="fas fa-1x fa-plus"></i>&nbsp Add Options</span>
</div>
<input type="text" class="form-control" value="${data[i][0]}" placeholder="write Question here!" required>
<div class="input-group-append">
<span class="input-group-text removeQue input-group-addon danger" style="cursor:pointer;"><i class="fas fa-1x fa-times"></i></span>
</div>
</div>
<input type="number" min="1" class="form-control mt-1" value="${data[i][1]}" placeholder="enter marks for this Question"required>
</div>
<div class="card-body optionContainer">${option}
</div>
</div>`;

                        $(".questionContainer").eq(0).append(ques);
                    }
                };
            });
            $("#csvfile").change(function () {
                $("#fileUploadLbl").html($(this).val().split("\\").pop());
            });
        });
    </script>
}

